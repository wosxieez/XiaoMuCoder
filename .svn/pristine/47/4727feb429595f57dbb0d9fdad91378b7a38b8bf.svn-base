package com.xiaomu.view.stageview
{
	import com.xiaomu.data.RoleData;
	import com.xiaomu.event.RoleEvent;
	import com.xiaomu.manager.RoleManager;
	import com.xiaomu.manager.ViewManager;
	
	import flash.events.MouseEvent;
	
	import coco.component.SkinComponent;
	
	public class StageView extends SkinComponent
	{
		public function StageView()
		{
			super();
			
			borderAlpha = backgroundAlpha = 1;
			borderColor = 0xF0E7CC;
			backgroundColor = 0xFEFBF0;
			RoleManager.getInstance().addEventListener(RoleEvent.ADD_ROLE,addRoleHandler);
			RoleManager.getInstance().addEventListener(RoleEvent.SELECT_ROLE,selectRoleHandler);
			ViewManager.getInstance().stageView = this;
			addEventListener(MouseEvent.MOUSE_DOWN, this_mouseDownHandler);
		}
		
		
		//----------------------------------------------------------------------------------------------------------------
		//
		// Properties
		//
		//----------------------------------------------------------------------------------------------------------------
		
		private var transformer:Transformer;
		
		
		//----------------------------------------------------------------------------------------------------------------
		//
		// Methods
		//
		//----------------------------------------------------------------------------------------------------------------
		
		override protected function createChildren():void
		{
			super.createChildren();
			
			transformer = new Transformer();
			transformer.x = transformer.y = 100;
			addChild(transformer);
		}
		
		override protected function drawSkin():void
		{
			super.drawSkin();
			
			graphics.beginFill(0xF9F4E6);
			graphics.drawRect(0, height - 30, width, 30);
			graphics.endFill();
		}
		
		protected function addRoleHandler(event:RoleEvent):void
		{
			var roleComponent:RoleComponent = new RoleComponent();
			roleComponent.roleData = event.roleData;
			addChild(roleComponent);
		}	
		
		protected function selectRoleHandler(event:RoleEvent):void
		{
			var selectRoleData:RoleData = event.roleData;
			var roleComponent:RoleComponent;
			for (var i:int = 0; i < numChildren; i++)
			{
				roleComponent = getChildAt(i) as RoleComponent;
				if (roleComponent && roleComponent.roleData.id == selectRoleData.id)
				{
					transformer.target = roleComponent;
					break;
				}
			}
		}
		
		/**
		 * 根据角色数据获取角色组件 
		 * @param role
		 * @return 
		 */		
		public function getRoleComponent(roleData:RoleData):RoleComponent
		{
			var roleComponent:RoleComponent;
			for (var i:int = 0; i < numChildren; i++)
			{
				roleComponent = getChildAt(i) as RoleComponent;
				if (roleComponent && roleComponent.roleData.id == roleData.id)
				{
					return roleComponent;
				}
			}
			
			return null;
		}
		
		protected function this_mouseDownHandler(event:MouseEvent):void
		{
			if (event.target is RoleComponent)
			{
				transformer.target = event.target as RoleComponent;
				transformer.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_DOWN));
			}
			else if (event.target is Transformer)
			{
				// do things
			}
			else
			{
				transformer.target = null; 
			}
		}
		
	}
}