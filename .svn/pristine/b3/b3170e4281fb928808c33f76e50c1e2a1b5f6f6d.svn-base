package com.xiaomu.view.roleview
{
	import com.xiaomu.component.IconButton2;
	import com.xiaomu.event.RoleEvent;
	import com.xiaomu.manager.RoleManager;
	
	import flash.events.MouseEvent;
	
	import coco.component.SkinComponent;
	import coco.manager.PopUpManager;
	
	/**
	 * 角色舞台视图 
	 * @author coco
	 */	
	public class RoleView extends SkinComponent
	{
		public function RoleView()
		{
			super();
			
			borderAlpha = backgroundAlpha = 1;
			borderColor = 0xF0E7CC;
			backgroundColor = 0xFEFBF0;
			RoleManager.getInstance().addEventListener(RoleEvent.ADD_ROLE,addRoleHandler);
		}
		
		//----------------------------------------------------------------------------------------------------------------
		//
		// Properties
		//
		//----------------------------------------------------------------------------------------------------------------
		
		private var addRoleButton:IconButton2;
		
		private var _rcollection :RoleCollection;
		
		public function get rcollection():RoleCollection
		{
			if (!_rcollection)
				_rcollection = new RoleCollection();
			
			return _rcollection;
		}
		
		
		//----------------------------------------------------------------------------------------------------------------
		//
		// Methods
		//
		//----------------------------------------------------------------------------------------------------------------
		
		override protected function createChildren():void
		{
			super.createChildren();
			
			addRoleButton = new IconButton2();
			addRoleButton.source = "assets/fodder.png";
			addRoleButton.addEventListener(MouseEvent.CLICK, addRoleButton_clickHandler);
			addChild(addRoleButton);
		}
		
		override protected function updateDisplayList():void
		{
			super.updateDisplayList();
			
			addRoleButton.x = width - 5 - addRoleButton.width;
			addRoleButton.y = height - 20 - addRoleButton.height / 2;
		}
		
		override protected function drawSkin():void
		{
			super.drawSkin();
			
			graphics.beginFill(0xF9F4E6);
			graphics.drawRect(0, height - 40, width, 40);
			graphics.endFill();
		}
		
		protected function addRoleButton_clickHandler(event:MouseEvent):void
		{
			// 如果角色面板当前已经是打开状态 则不进行任何处理
			if (rcollection.isPopUp) return;
			
			PopUpManager.addPopUp(rcollection, null, true, true, 0, .1);
			PopUpManager.centerPopUp(rcollection);
		}
		
		protected function addRoleHandler(event:RoleEvent):void
		{
			var roleCover:RoleCover = new RoleCover();
			roleCover.source = event.roleData.source;
			roleCover.roleName = event.roleData.name;
			addChild(roleCover);
		}
		
		protected function clickRoleHandler(event:MouseEvent):void
		{
			var viewEvent :RoleEvent = new RoleEvent(RoleEvent.SELECTED_ROLE);
			RoleManager.getInstance().dispatchEvent(viewEvent);
		}
		
	}
}