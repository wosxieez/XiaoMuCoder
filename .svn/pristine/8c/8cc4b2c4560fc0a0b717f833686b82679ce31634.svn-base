package com.xiaomu.view.roleview
{
	import com.xiaomu.component.IconButton3;
	import com.xiaomu.event.RoleEvent;
	import com.xiaomu.manager.RoleManager;
	
	import flash.events.MouseEvent;
	
	import coco.component.Image;
	import coco.component.Label;
	import coco.core.UIComponent;
	
	public class RoleCover extends UIComponent
	{
		public function RoleCover()
		{
			super();
			width = 100;
			height = 100;
			buttonMode = true;
			addEventListener(MouseEvent.CLICK, this_clickHandler);
			addEventListener(MouseEvent.MOUSE_OUT,this_outHandler);
			addEventListener(MouseEvent.MOUSE_OVER,this_overHandler);
		}
		
		protected function this_outHandler(event:MouseEvent):void
		{
			_mouseOver = false;
		}
		
		protected function this_overHandler(event:MouseEvent):void
		{
			_mouseOver = true;
		}
		
		private var imageDisplay:Image , miniButton1 : IconButton3 , miniButton2 :IconButton3;
		private var lab : Label;
		
		private var _mouseOver : Boolean =false;
		public function set mouseOver(value : Boolean):void
		{
		    _mouseOver = value ;
			invalidateSkin();
		}
		
		private var _roleName : String ;
		
		public function get 	roleName():String
		{
		    return _roleName;
		}
		
		public function set roleName(value : String):void
		{
			_roleName=  value ;
			invalidateProperties();
		}
		
		private var _selected:Boolean = true;

		public function get selected():Boolean
		{
			return _selected;
		}

		public function set selected(value:Boolean):void
		{
			_selected = value;
			invalidateProperties();
			invalidateSkin();
		}
		
		private var _source:Object;

		public function get source():Object
		{
			return _source;
		}

		public function set source(value:Object):void
		{
			_source = value;
			invalidateProperties();
		}
		
		override protected function createChildren():void
		{
			super.createChildren();
			
			imageDisplay = new Image();
			imageDisplay.width = 70;
			imageDisplay.height = 50;
			addChild(imageDisplay);
			
			miniButton1 = new IconButton3();
			miniButton1.source = "assets/setting1.png";
			miniButton1.addEventListener(MouseEvent.CLICK,settingClickHandler);
			addChild(miniButton1);
			
			miniButton2 = new IconButton3();
			miniButton2.source = "assets/close1.png";
			miniButton2.addEventListener(MouseEvent.CLICK,closeClickHandler);
			addChild(miniButton2);
			
			lab = new Label();
			lab.height = 30;
			lab.width = width;
			lab.fontSize = 16;
			lab.fontFamily = "Microsoft YaHei";
			lab.backgroundAlpha = 1;
			addChild(lab);
		}
		
		protected function settingClickHandler(event:MouseEvent):void
		{
			//将设置按钮的操作通过事件管理器派发出去
			var roleEvent :RoleEvent = new RoleEvent(RoleEvent.SETTING_ROLE);
			RoleManager.getInstance().dispatchEvent(roleEvent);
		}
		
		protected function closeClickHandler(event:MouseEvent):void
		{
			//将关闭按钮的操作通过事件管理器派发出去
			var roleEvent : RoleEvent = new RoleEvent(RoleEvent.REMOVE_ROLE);
			RoleManager.getInstance().dispatchEvent(roleEvent);
		}
		
		override protected function commitProperties():void
		{
			super.commitProperties();
			
			imageDisplay.source = source;
			miniButton1.visible = selected;
			miniButton2.visible = selected;
		    lab.text = _roleName;
			lab.color = 0xffffff;
		}
		
		override protected function updateDisplayList():void
		{
		    super.updateDisplayList();
			
			miniButton1.x = 3;
			miniButton1.y = 3;
			
			miniButton2.x = width-miniButton2.width-3;
			miniButton2.y = 3;
			
			imageDisplay.x = (width - imageDisplay.width)/2;
			imageDisplay.y = 15;
			
			lab.x = 0;
			lab.y = height - lab.height-1;
		}
		
		override protected function drawSkin():void
		{
		    super.drawSkin();
			graphics.clear();
			graphics.lineStyle(2 , 0x0000ff,selected ? 0.5:0);
			graphics.beginFill(0x87CEFA, selected ? 0.5 : 0);
			graphics.drawRoundRect(0,0,width,height,15,15);
			graphics.endFill();
			
			graphics.beginFill(0x696969,selected ? 0.5 : 0);
			graphics.lineStyle(0,0x696969,0);
			graphics.drawRoundRect(4,height-lab.height+4,width-8,lab.height-8,15,15);
			graphics.endFill();
			
		}
		
		protected function this_clickHandler(event:MouseEvent):void
		{
			selected = !selected;
//			lab.visible = !lab.visible;
		}
		
	}
}