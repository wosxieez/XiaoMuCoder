package com.xiaomu.view.actionview.action
{
	import com.xiaomu.hookcore.DownHook;
	import com.xiaomu.hookcore.HookComponent;
	import com.xiaomu.hookcore.HookEvent;
	import com.xiaomu.hookcore.UpHook;
	
	import coco.component.Label;
	
	public class WhileActionComponent extends HookComponent
	{
		public function WhileActionComponent()
		{
			super();
			
			width = 150;
			
			upHook = new UpHook();
			upHook.x = 15;
			
			downHook = new DownHook();
			downHook.addEventListener(HookEvent.MATCH_CHANGED, matchChangedHandler);
			downHook.x = 15;
			
			downHook2 = new DownHook();
			downHook2.y = 30;
			downHook2.x = 35;
			downHook2.addEventListener(HookEvent.MATCH_CHANGED, matchChangedHandler);
		}
		
		private var labelDisplay:Label;
		
		override protected function createChildren():void
		{
			super.createChildren();
			
			labelDisplay = new Label();
			labelDisplay.color = 0xFFFFFF;
			labelDisplay.text = "Do While2";
			labelDisplay.height = 30;
			addChild(labelDisplay);
		}
		
		override protected function measure():void
		{
			if (downHook2.targetHook)
			{
				downHookHeight = 0;
				sumDownHook2Height(downHook2.targetHook.hookComponent);
				measuredHeight = downHookHeight + 60;
			}
			else
			{
				measuredHeight = 120;
			}
		}
		
		override protected function updateDisplayList():void
		{
			super.updateDisplayList();
			
			downHook.y = height;
			
			labelDisplay.width = width;
		}
		
		override protected function drawSkin():void
		{
			graphics.clear();
			graphics.beginFill(0x9F65E9);
			graphics.drawRect(upHook.x, upHook.y, 10, 5);
			graphics.drawRect(0, 0, width, 30);
			graphics.endFill();
			
			graphics.beginFill(0x9F65E9);
			graphics.drawRect(downHook2.x, height - 30, 10, 5);
			graphics.drawRect(0, height - 30, width, 30);
			graphics.endFill();
			
			graphics.beginFill(downHook.matchHook ? 0x00FF00 : 0x9F65E9);
			graphics.drawRect(downHook.x, height, 10, 5);
			graphics.endFill();
			
			graphics.beginFill(0x9F65E9);
			graphics.drawRect(0, 30, downHook2.x - 15, height - 60);
			graphics.endFill();
			
			graphics.beginFill(downHook2.matchHook ? 0x00FF00 : 0x9F65E9);
			graphics.drawRect(downHook2.x, downHook2.y, 10, 5);
			graphics.endFill();
		}
		
		protected function matchChangedHandler(event:HookEvent):void
		{
			invalidateSkin();
		}
		
		private var downHookHeight:Number = 0;
		
		private function sumDownHook2Height(hookComponent:HookComponent):void
		{
			downHookHeight = downHookHeight + hookComponent.height;
			
			if (hookComponent.downHook && hookComponent.downHook.targetHook)
				sumDownHook2Height(hookComponent.downHook.targetHook.hookComponent);
		}
		
	}
}