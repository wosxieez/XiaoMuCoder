package com.xiaomu.actioncomponent
{
	import com.xiaomu.component.ActionComponent;
	import com.xiaomu.component.DownActionHook;
	import com.xiaomu.component.UpActionHook;
	
	import coco.component.Label;
	
	public class DoWhileActionComponent extends ActionComponent
	{
		public function DoWhileActionComponent()
		{
			super();
			
			width = 150;
			
			upActionHook = new UpActionHook();
			upActionHook.x = 15;
			
			downActionHook = new DownActionHook();
			downActionHook.x = 15;
			
			downActionHook2 = new DownActionHook();
			downActionHook2.y = 30;
			downActionHook2.x = 35;
		}
		
		
		private var labelDisplay:Label;
		private var downHookHeight:Number = 0;
		
		
		override protected function createChildren():void
		{
			super.createChildren();
			
			labelDisplay = new Label();
			labelDisplay.color = 0xFFFFFF;
			labelDisplay.text = "Do While";
			labelDisplay.height = 30;
			addChild(labelDisplay);
		}
		
		override protected function measure():void
		{
			if (downActionHook2.targetActionHook)
			{
				downHookHeight = 0;
				sumDownHook2Height(downActionHook2.targetActionHook.actionComponent);
				measuredHeight = downHookHeight + 60;
			}
			else
			{
				measuredHeight = 120;
			}
		}
		
		override protected function updateDisplayList():void
		{
			super.updateDisplayList();
			
			downActionHook.y = height;
			
			labelDisplay.width = width;
		}
		
		override protected function drawSkin():void
		{
			graphics.clear();
			graphics.beginFill(0x81CBFA);
			graphics.drawRect(upActionHook.x, upActionHook.y, 10, 5);
			graphics.drawRect(0, 0, width, 30);
			graphics.endFill();
			
			graphics.beginFill(0x81CBFA);
			graphics.drawRect(downActionHook2.x, height - 30, 10, 5);
			graphics.drawRect(0, height - 30, width, 30);
			graphics.endFill();
			
			graphics.beginFill(downActionHook.matchActionHook ? 0x00FF00 : 0x81CBFA);
			graphics.drawRect(downActionHook.x, height, 10, 5);
			graphics.endFill();
			
			graphics.beginFill(0x81CBFA);
			graphics.drawRect(0, 30, downActionHook2.x - 15, height - 60);
			graphics.endFill();
			
			graphics.beginFill(downActionHook2.matchActionHook ? 0x00FF00 : 0x81CBFA);
			graphics.drawRect(downActionHook2.x, downActionHook2.y, 10, 5);
			graphics.endFill();
		}
		
		private function sumDownHook2Height(hookComponent:ActionComponent):void
		{
			downHookHeight = downHookHeight + hookComponent.height;
			
			if (hookComponent.downActionHook && hookComponent.downActionHook.targetActionHook)
				sumDownHook2Height(hookComponent.downActionHook.targetActionHook.actionComponent);
		}
		
	}
}