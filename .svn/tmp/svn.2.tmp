package
{
	import com.xiaomu.component.AppAlert;
	import com.xiaomu.component.AppLoading;
	import com.xiaomu.event.VersionEvent;
	import com.xiaomu.manager.VersionManager;
	import com.xiaomu.view.actionview.ActionView;
	import com.xiaomu.view.menuview.MenuView;
	import com.xiaomu.view.roleview.RoleView;
	import com.xiaomu.view.stageview.StageView;
	
	import flash.display.Screen;
	import flash.events.Event;
	import flash.utils.setTimeout;
	
	import coco.component.Alert;
	import coco.core.Application;
	import coco.event.UIEvent;
	import coco.manager.PopUpManager;
	
	
	/**
	 * KidsCode Application 
	 * @author coco
	 */	
	[SWF(width="1024", height="700")]
	public class XiaoMuCoder extends Application
	{
		public function XiaoMuCoder()
		{
			super();
			
			addEventListener(Event.ADDED_TO_STAGE, this_addedToStageHandler);
		}
		
		
		private var menuView:MenuView;
		private var stageView:StageView;
		private var roleView:RoleView;
		private var actionView:ActionView;
		private var appLoading:AppLoading;
		
		
		override protected function createChildren():void
		{
			super.createChildren();
			
			menuView = new MenuView();
			menuView.height = 40;
			addChild(menuView);
			
			stageView = new StageView();
			stageView.y = 40;
			stageView.width = 400;
			addChild(stageView);
			
			roleView = new RoleView();
			roleView.width = 400;
			addChild(roleView);
			
			actionView = new ActionView();
			actionView.x = 400;
			actionView.y = 40;
			addChild(actionView);
			
			// 1s后开始检查版本更新
			setTimeout(checkAppVersion, 500);
		}
		
		override protected function updateDisplayList():void
		{
			super.updateDisplayList();
			
			menuView.width = width;
			
			roleView.height = (height - menuView.height) / 2;
			roleView.y = height - roleView.height;
			
			stageView.height = roleView.height;
			
			actionView.height = height - actionView.y;
			actionView.width = width - actionView.x;
		}
		
		protected function this_addedToStageHandler(event:Event):void
		{
			// 程序居中代码
			stage.nativeWindow.x = Screen.mainScreen.visibleBounds.x + 
				(Screen.mainScreen.visibleBounds.width - stage.stageWidth) / 2;
			stage.nativeWindow.y = Screen.mainScreen.visibleBounds.y +
				(Screen.mainScreen.visibleBounds.height - stage.stageHeight) / 2;
		}
		
		
		/**
		 * 检查程序版本更新
		 */		
		private function checkAppVersion():void
		{
			VersionManager.getInstance().addEventListener(VersionEvent.CHECK_RESULT, version_checkResultHandler);
			VersionManager.getInstance().checkVersion();
		}
		
		protected function version_checkResultHandler(event:VersionEvent):void
		{
			if (event.available)
			{
				AppAlert.show(
					"最新版本:" + VersionManager.getInstance().latestVersionLabel +
					"\r当前版本:" + VersionManager.getInstance().curVersionLabel + 
					"\r\r发现新版应用程序，是否立即更新", 
					"版本提示", 
					Alert.OK|Alert.CANCEL, 
					null, 
					versionCloseHandler);
			}
		}
		
		private function versionCloseHandler(e:UIEvent):void
		{
			if (e.detail == Alert.OK)
			{
				appLoading = new AppLoading();
				PopUpManager.addPopUp(appLoading, null, true);
				PopUpManager.centerPopUp(appLoading);
				
				VersionManager.getInstance().addEventListener(VersionEvent.PROGRESS, version_processHandler);
				VersionManager.getInstance().addEventListener(VersionEvent.DOWNLOAD_RESULT, version_downloadResultHandler);
				VersionManager.getInstance().download();
			}
		}
		
		protected function version_processHandler(event:VersionEvent):void
		{
			trace(event.progressValue);
			appLoading.value = event.progressValue / 100;
		}
		
		protected function version_downloadResultHandler(event:VersionEvent):void
		{
			// 新版本下载完毕， 开始安装更新
			VersionManager.getInstance().install();
		}
		
	}
}